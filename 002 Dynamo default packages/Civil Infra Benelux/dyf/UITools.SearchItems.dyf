<Workspace Version="1.3.4.6666" X="-1207.21149156581" Y="177.446133900308" zoom="1.27771698410772" ScaleFactor="1" Name="UITools.SearchItems" Description="Creates a Selection UI where the user can search and select multiple items from a List." ID="cd9ae1c5-bceb-4d89-b0a0-f04cd77d78d7" Category="CIB.UITools.Create">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="a5d73f14-194f-4d46-abbe-e03b2089d7e9" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1235.4242787469" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script># Enable Python support and load DesignScript library
import clr
clr.AddReference('ProtoGeometry')

clr.AddReference('System.Drawing')
from System.Drawing import *

clr.AddReference('System.Windows.Forms')
from System.Windows.Forms import *

class SearchForm(Form):
	def __init__(self, items, names):
		self.InitializeComponent(items, names)
	
	def InitializeComponent(self, items, names):
		self.Items = items
		self.Names = names
		self.FoundNames = names
		self.FoundItems = items
		self.SelectedItems = []
		
		
		self._listBox = ListBox()
		self._searchBox = TextBox()
		self.button = Button()
		self.AllButton = Button()
		self.NoneButton = Button()
		self.SuspendLayout()
		# 
		# listBox
		# 
		self._listBox.BackColor = SystemColors.Window
		self._listBox.Font = Font("Microsoft Sans Serif", 9.75, FontStyle.Regular, GraphicsUnit.Point, 0)
		self._listBox.FormattingEnabled = True
		self._listBox.ItemHeight = 16
			
		self._listBox.Location = Point(13, 39)
		self._listBox.Name = "listBox"
		self._listBox.Size = Size(223, 260)
		self._listBox.TabIndex = 0
		self._listBox.SelectionMode = SelectionMode.MultiSimple
		for name in self.Names:
			self._listBox.Items.Add(name)
		# 
		# searchBox
		# 
		self._searchBox.BackColor = SystemColors.Window
		self._searchBox.Font = Font("Microsoft Sans Serif", 9.75, FontStyle.Regular, GraphicsUnit.Point, 0)
		self._searchBox.Location = Point(13, 13)
		self._searchBox.Name = "searchBox"
		self._searchBox.Size = Size(222, 22)
		self._searchBox.TabIndex = 1
		self._searchBox.Text = "Search for ..."
		self._searchBox.TextChanged += self.SearchBoxTextChanged
		# 
		# OKButton
		# 
		self.button.FlatStyle = FlatStyle.Popup
		self.button.ForeColor = Color.Black
		self.button.Location = Point(170, 308)
		self.button.Name = "button1"
		self.button.Size = Size(60, 23)
		self.button.TabIndex = 2
		self.button.Text = "OK"
		self.button.UseVisualStyleBackColor = True
		self.button.Click += self.ButtonClicked
		# 
		# Select All
		# 
		self.AllButton.FlatStyle = FlatStyle.Popup
		self.AllButton.ForeColor = Color.Black
		self.AllButton.Location = Point(10, 308)
		self.AllButton.Name = "AllButton"
		self.AllButton.Size = Size(65, 23)
		self.AllButton.TabIndex = 2
		self.AllButton.Text = "Select All"
		self.AllButton.UseVisualStyleBackColor = True
		self.AllButton.Click += self.AllButtonClicked
		# 
		# Select None
		# 
		self.NoneButton.FlatStyle = FlatStyle.Popup
		self.NoneButton.ForeColor = Color.Black
		self.NoneButton.Location = Point(83, 308)
		self.NoneButton.Name = "NoneButton"
		self.NoneButton.Size = Size(80, 23)
		self.NoneButton.TabIndex = 2
		self.NoneButton.Text = "Select None"
		self.NoneButton.UseVisualStyleBackColor = True
		self.NoneButton.Click += self.NoneButtonClicked
		# 
		# Form1
		# 
		self.BackColor = Color.White
		self.ClientSize = Size(247, 342)
		self.Controls.Add(self.button)
		self.Controls.Add(self.AllButton)
		self.Controls.Add(self.NoneButton)
		self.Controls.Add(self._searchBox)
		self.Controls.Add(self._listBox)
		self.ForeColor = Color.White
		self.MaximizeBox = False
		self.MinimizeBox = False
		self.Name = "Form1"
		self.ShowIcon = False
		self.SizeGripStyle = SizeGripStyle.Hide
		self.StartPosition = FormStartPosition.CenterScreen
		self.Text = "Select Items"
		self.ResumeLayout(False)
		self.PerformLayout()
	
	def ButtonClicked(self, sender, args):
		indices = self._listBox.SelectedIndices
		for index in indices:
			item = self.FoundItems[index]
			self.SelectedItems.Add(item)
		self.Close()
		
	def AllButtonClicked(self, sender, args):
		self._listBox.SelectedItems.Clear()
		for i in range(len(self._listBox.Items)):
			self._listBox.SetSelected(i, True)
		
	def NoneButtonClicked(self, sender, args):
		self._listBox.SelectedItems.Clear()
		
	def SearchBoxTextChanged(self, sender, args):
		searchTerm = self._searchBox.Text
		self._listBox.Items.Clear()
		self.FoundNames = []
		self.FoundItems = []
		if searchTerm != "":
			for i in range(len(names)):
				name = names[i]
				item = items[i]
				if name.ToUpper().Contains(searchTerm.ToUpper()):
					self._listBox.Items.Add(name)
					self.FoundNames.Add(name)
					self.FoundItems.Add(item)
		else:
			self.FoundItems = self.Items
			self.FoundNames = self.Names
			for name in self.FoundNames:
				self._listBox.Items.Add(name)
					
					
		
# The inputs to this node will be stored as a list in the IN variables.
items = IN[0]
names = IN[1]
rerun = IN[2]

if rerun:
	searchForm = SearchForm(items, names)
	searchForm.ShowDialog()
	OUT = searchForm.SelectedItems
else:
	searchForm = SearchForm(items, names)
	searchForm.ShowDialog()
	OUT = searchForm.SelectedItems</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="ca108ddb-6db4-42fe-8717-cd6ffaedaedc" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1436.4242787469" y="-2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="// A List with the Selected Items&#xD;&#xA;SelectedItems : var[];" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="3ffd0405-5673-4359-a681-da98dfeeaf82" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="628" y="-110" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// A List with Items&#xD;&#xA;Items : var[];" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="389a80de-b004-4aad-ba1b-bdc413d46f65" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="604" y="-27" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// A List with Names&#xD;&#xA;Names : string[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="5981e618-f547-43bd-8314-3ea93758c1ae" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="511" y="74" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Reruns the Nodes. Switch between True/False to Rerun the Node&#xD;&#xA;Rerun : bool = true;" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="a5d73f14-194f-4d46-abbe-e03b2089d7e9" start_index="0" end="ca108ddb-6db4-42fe-8717-cd6ffaedaedc" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3ffd0405-5673-4359-a681-da98dfeeaf82" start_index="0" end="a5d73f14-194f-4d46-abbe-e03b2089d7e9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="389a80de-b004-4aad-ba1b-bdc413d46f65" start_index="0" end="a5d73f14-194f-4d46-abbe-e03b2089d7e9" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5981e618-f547-43bd-8314-3ea93758c1ae" start_index="0" end="a5d73f14-194f-4d46-abbe-e03b2089d7e9" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="b76fba87-4b4a-48a8-bb9a-9dbdb5ef75f2" annotationText="Filter Content and Make UI" left="1225.4242787469" top="-154" width="144" height="274" fontSize="30" InitialTop="0" InitialHeight="355.691720116793" TextblockHeight="144" backgrouund="#FFFFAA45">
      <Models ModelGuid="a5d73f14-194f-4d46-abbe-e03b2089d7e9" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="4214c260-d365-4b94-88c3-f1a4e9498528" annotationText="Input" left="501" top="-156" width="570" height="307" fontSize="30" InitialTop="-110" InitialHeight="291" TextblockHeight="36" backgrouund="#FFFF7BAC">
      <Models ModelGuid="3ffd0405-5673-4359-a681-da98dfeeaf82" />
      <Models ModelGuid="389a80de-b004-4aad-ba1b-bdc413d46f65" />
      <Models ModelGuid="5981e618-f547-43bd-8314-3ea93758c1ae" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>